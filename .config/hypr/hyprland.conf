env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland

env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = QT_QPA_PLATFORM,wayland
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_QPA_PLATFORMTHEME,qt6ct

env = GDK_BACKEND,wayland
env = SDL_VIDEODRIVER,wayland
env = CLUTTER_BACKEND,wayland

env = XCURSOR_SIZE,24

exec-once = dbus-update-activation-environment --systemd --all
exec-once = systemctl --user reset-failed
exec-once = systemctl --user import-environment --all
exec-once = systemctl --user start
exec-once = /usr/libexec/lxqt-policykit-agent

# Idle Daemon
exec-once = swayidle -w timeout 1200 "swaylock -f" \
                        timeout 1800 "hyprctl dispatch dpms off" \
                        resume "hyprctl dispatch dpms on" \
                        before-sleep "swaylock -f"

monitor=,preferred,auto,auto
monitor=DP-3,preferred,-1920x0,auto


exec-once = waybar

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

# Set programs that you use
$terminal = kitty
$fileManager = thunar
$menu = rofi -terminal '$terminal' -show-icons -show combi -combi-modes drun#run -modes combi

input {
    kb_layout = us,ara
    kb_variant =
    kb_model =
    kb_rules =
    kb_options = grp:alt_shift_toggle,caps:swapescape
    follow_mouse = 1

    touchpad {
        natural_scroll = true
        disable_while_typing = false
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    gaps_in = 5
    gaps_out = 5
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = dwindle

    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10
    # dim_inactive = true
    # dim_strength = 0.1

    blur {
        enabled = true
        size = 3
        passes = 1
        
        vibrancy = 0.1696
    }

    drop_shadow = true
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = true

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = true # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # you probably want this
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = false
}

misc {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    force_default_wallpaper = -1 # Set to 0 to disable the anime mascot wallpapers
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more
device:epic-mouse-v1 {
    sensitivity = -0.5
}

# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
windowrulev2 = nomaximizerequest, class:.* # You'll probably like this.


# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod, D, exec, $menu
bind = $mainMod SHIFT, Q, killactive
# bind = $mainMod, C, killactive,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# Move windows
bind = $mainMod SHIFT, h, movewindow, l
bind = $mainMod SHIFT, l, movewindow, r
bind = $mainMod SHIFT, k, movewindow, u
bind = $mainMod SHIFT, j, movewindow, d

# Move
bind = $mainMod CTRL, l, movecurrentworkspacetomonitor, l
bind = $mainMod CTRL, h, movecurrentworkspacetomonitor, r

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Full Screen
bind = $mainMod, F, fullscreen

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Audio
$volume_helper_cmd = /usr/libexec/sway/volume-helper
# bind = , XF86AudioMute, exec, "pactl set-default-sink $(pactl list short sinks |awk '{print $2}' |rofi $rofi_args -dmenu)"
bindle = , XF86AudioRaiseVolume, exec, $volume_helper_cmd --limit "$volume_limit" --increase "$volume_step"
bindle = , XF86AudioLowerVolume, exec, $volume_helper_cmd --limit "$volume_limit" --decrease "$volume_step"
bindl = , XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume_helper_cmd
bindl = , XF86AudioMicMute, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle
# bindl=, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindl=, XF86AudioPlay, exec, playerctl play-pause 
bindl=, XF86AudioNext, exec, playerctl next 
bindl=, XF86AudioPrev, exec, playerctl previous

#Brightness
$brightness_step = 5
$brightness_notification_cmd = command -v notify-send >/dev/null && VALUE=$(light) && VALUE=${VALUE%%.*} && notify-send -e -h string:x-canonical-private-synchronous:brightness -h int:value:$VALUE -t 800 Brightness: ${VALUE}%

bindle = ,XF86MonBrightnessDown,exec,STEP=$brightness_step && light -U ${STEP:-5} && $brightness_notification_cmd
bindle = ,XF86MonBrightnessUp,exec,STEP=$brightness_step && light -A ${STEP:-5} && $brightness_notification_cmd

# Print Screen
bind = $mainMod, Print, exec, grimshot save output
bind = CTRL, Print, exec, grimshot save area
bind = ALT, Print, exec, grimshot save window
    # Print       exec grimshot save output
    # # Capture the currently active window
    # Alt+Print   exec grimshot save active
    # # Select and capture a custom rectangular area
    # Ctrl+Print  exec grimshot save area

# Resize
# will switch to a submap called resize
bind=$mainMod,R,submap,resize

# will start a submap called "resize"
submap=resize

# sets repeatable binds for resizing the active window
binde=,l,resizeactive,10 0
binde=,j,resizeactive,-10 0
binde=,k,resizeactive,0 -10
binde=,j,resizeactive,0 10

# use reset to go back to the global submap
bind=,escape,submap,reset 

# will reset the submap, meaning end the current one and return to the global one
submap=reset

# Idle

exec-once = LT="$lock_timeout" ST="$screen_timeout" LT=${LT:-300} ST=${ST:-60} && \
    swayidle -w \
        timeout $LT 'swaylock -f' \
        timeout $((LT + ST)) 'hyprctl dispatch dpms off' \
                      resume 'hyprctl dispatch dpms on'  \
        timeout $ST 'pgrep -xu "$USER" swaylock >/dev/null && hyprctl dispatch dpms off' \
             resume 'pgrep -xu "$USER" swaylock >/dev/null && hyprctl dispatch dpms on'  \
        before-sleep 'swaylock -f' \
        lock 'swaylock -f' \
        unlock 'pkill -xu "$USER" -SIGUSR1 swaylock'

bind = $mainMod, M, exec, swaylock
bind = $mainMod SHIFT, M, exit,

# trigger when the switch is turning on
# bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor "eDP-1,3840x2160,0x0,1"

# trigger when the switch is turning off
# bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor "eDP-1, disable"
# keybinds further down will be global again...

# Applets
exec-once=nm-applet --indicator
